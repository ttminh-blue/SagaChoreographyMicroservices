version: '3.4'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: "rabbitmq"
    labels:
      NAME: "rabbitmq"
    networks:
    - productnetwork
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
   
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD : "AaBbCcD123!"
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "AaBbCcD123!"
    ports:
     - "1433:1433"
    volumes:
     - sqlvolume:/var/opt/mssql
     - ./init.sql:/init.sql
    networks:
     - productnetwork
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "AaBbCcD123!", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      
  order-service:
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=OrderDb;User Id=sa;Password=AaBbCcD123!;TrustServerCertificate=True;
    ports: 
      - "3001:80"
      - "3031:443"
    networks:
     - productnetwork
    restart: on-failure:5 
    depends_on:
      rabbitmq:
        condition: service_healthy
        
        
networks:
  productnetwork:

volumes:
  sqlvolume:
